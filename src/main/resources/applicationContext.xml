<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


<!--    <import resource="applicationContext-redis.xml"/>-->
<!--    <import resource="applicationContext-hbase.xml"/>-->
    <import resource="spring/applicationContext-utils.xml"/>
<!--    <import resource="applicationContext-searchModel.xml"/>-->
<!--    <import resource="applicationContext-mq.xml"/>-->


    <!--    mysql-->
    <context:property-placeholder location="classpath:properties/*.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}" />
        <property name="maxTotal" value="${jdbc.maxTotal}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}" />
        <property name="initialSize" value="${jdbc.initialSize}"/>
    </bean>


    <!--    transaction-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    advice-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--    aop-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.edu.zju.rushrushrush.roadmonitorbackend.service.*.*(..))" />
    </aop:config>



    <!--    mybatis-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 扫描 sql 配置文件: mapper 需要的 xml 文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--    interface development scan dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.edu.zju.rushrushrush.roadmonitorbackend.dao"/>
    </bean>


    <!--    @Service-->
    <context:component-scan base-package="cn.edu.zju.rushrushrush.roadmonitorbackend.service,cn.edu.zju.rushrushrush.roadmonitorbackend.aspect,cn.edu.zju.rushrushrush.roadmonitorbackend.controller"/>



    <!--    EncryptUtl-->
    <!--    <bean id="encryptUtil" class="cn.edu.zucc.caviar.searchengine.common.utils.EncryptUtil"/>-->




</beans>